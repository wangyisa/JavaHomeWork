<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.kingsword.ebook.dao.BookMapper">
  <resultMap id="BaseResultMap" type="xyz.kingsword.ebook.pojo.Book">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
    <result column="classify_id" jdbcType="INTEGER" property="classifyId"/>
    <result column="words_num" jdbcType="INTEGER" property="wordsNum"/>
    <result column="status" jdbcType="INTEGER" property="status"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, classify_id, words_num, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
   *
    from book
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="xyz.kingsword.ebook.pojo.Book">
    insert into book (id, user_id, classify_id,
                      words_num, status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{classifyId,jdbcType=INTEGER},
            #{wordsNum,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="xyz.kingsword.ebook.pojo.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="classifyId != null">
        classify_id,
      </if>
      <if test="wordsNum != null">
        words_num,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="classifyId != null">
        #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="wordsNum != null">
        #{wordsNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.classifyId != null">
        classify_id = #{record.classifyId,jdbcType=INTEGER},
      </if>
      <if test="record.wordsNum != null">
        words_num = #{record.wordsNum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set id = #{record.id,jdbcType=INTEGER},
    user_id = #{record.userId,jdbcType=INTEGER},
    classify_id = #{record.classifyId,jdbcType=INTEGER},
    words_num = #{record.wordsNum,jdbcType=INTEGER},
    status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.kingsword.ebook.pojo.Book">
    update book
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="classifyId != null">
        classify_id = #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="wordsNum != null">
        words_num = #{wordsNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.kingsword.ebook.pojo.Book">
    update book
    set user_id     = #{userId,jdbcType=INTEGER},
        classify_id = #{classifyId,jdbcType=INTEGER},
        words_num   = #{wordsNum,jdbcType=INTEGER},
        status      = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateStatusByPrimaryKey" parameterType="xyz.kingsword.ebook.pojo.Book">
    update book
    set
        status      = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>