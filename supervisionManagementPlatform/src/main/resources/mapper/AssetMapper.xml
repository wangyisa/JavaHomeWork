<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.AssetMapper">
  <resultMap id="BaseResultMap" type="pojo.Asset">
    <id column="asset_id" jdbcType="VARCHAR" property="assetId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="asset_number" jdbcType="INTEGER" property="assetNumber" />
    <result column="asset_date" jdbcType="DATE" property="assetDate" />
    <result column="asset_price" jdbcType="REAL" property="assetPrice" />
    <result column="asset_belong" jdbcType="VARCHAR" property="assetBelong" />
    <result column="asset_depreciation" jdbcType="REAL" property="assetDepreciation" />
    <result column="asset_year" jdbcType="INTEGER" property="assetYear" />
    <result column="asset_location" jdbcType="VARCHAR" property="assetLocation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    asset_id, user_id, asset_number, asset_date, asset_price, asset_belong, asset_depreciation, 
    asset_year, asset_location
  </sql>
  <select id="selectByExample" parameterType="pojo.AssetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from asset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from asset
    where asset_id = #{assetId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from asset
    where asset_id = #{assetId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.AssetExample">
    delete from asset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.Asset">
    insert into asset (asset_id, user_id, asset_number, 
      asset_date, asset_price, asset_belong, 
      asset_depreciation, asset_year, asset_location
      )
    values (#{assetId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{assetNumber,jdbcType=INTEGER}, 
      #{assetDate,jdbcType=DATE}, #{assetPrice,jdbcType=REAL}, #{assetBelong,jdbcType=VARCHAR}, 
      #{assetDepreciation,jdbcType=REAL}, #{assetYear,jdbcType=INTEGER}, #{assetLocation,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pojo.Asset">
    insert into asset
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="assetId != null">
        asset_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="assetNumber != null">
        asset_number,
      </if>
      <if test="assetDate != null">
        asset_date,
      </if>
      <if test="assetPrice != null">
        asset_price,
      </if>
      <if test="assetBelong != null">
        asset_belong,
      </if>
      <if test="assetDepreciation != null">
        asset_depreciation,
      </if>
      <if test="assetYear != null">
        asset_year,
      </if>
      <if test="assetLocation != null">
        asset_location,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="assetId != null">
        #{assetId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="assetNumber != null">
        #{assetNumber,jdbcType=INTEGER},
      </if>
      <if test="assetDate != null">
        #{assetDate,jdbcType=DATE},
      </if>
      <if test="assetPrice != null">
        #{assetPrice,jdbcType=REAL},
      </if>
      <if test="assetBelong != null">
        #{assetBelong,jdbcType=VARCHAR},
      </if>
      <if test="assetDepreciation != null">
        #{assetDepreciation,jdbcType=REAL},
      </if>
      <if test="assetYear != null">
        #{assetYear,jdbcType=INTEGER},
      </if>
      <if test="assetLocation != null">
        #{assetLocation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.AssetExample" resultType="java.lang.Long">
    select count(*) from asset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update asset
    <set>
      <if test="record.assetId != null">
        asset_id = #{record.assetId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.assetNumber != null">
        asset_number = #{record.assetNumber,jdbcType=INTEGER},
      </if>
      <if test="record.assetDate != null">
        asset_date = #{record.assetDate,jdbcType=DATE},
      </if>
      <if test="record.assetPrice != null">
        asset_price = #{record.assetPrice,jdbcType=REAL},
      </if>
      <if test="record.assetBelong != null">
        asset_belong = #{record.assetBelong,jdbcType=VARCHAR},
      </if>
      <if test="record.assetDepreciation != null">
        asset_depreciation = #{record.assetDepreciation,jdbcType=REAL},
      </if>
      <if test="record.assetYear != null">
        asset_year = #{record.assetYear,jdbcType=INTEGER},
      </if>
      <if test="record.assetLocation != null">
        asset_location = #{record.assetLocation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update asset
    set asset_id = #{record.assetId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      asset_number = #{record.assetNumber,jdbcType=INTEGER},
      asset_date = #{record.assetDate,jdbcType=DATE},
      asset_price = #{record.assetPrice,jdbcType=REAL},
      asset_belong = #{record.assetBelong,jdbcType=VARCHAR},
      asset_depreciation = #{record.assetDepreciation,jdbcType=REAL},
      asset_year = #{record.assetYear,jdbcType=INTEGER},
      asset_location = #{record.assetLocation,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Asset">
    update asset
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="assetNumber != null">
        asset_number = #{assetNumber,jdbcType=INTEGER},
      </if>
      <if test="assetDate != null">
        asset_date = #{assetDate,jdbcType=DATE},
      </if>
      <if test="assetPrice != null">
        asset_price = #{assetPrice,jdbcType=REAL},
      </if>
      <if test="assetBelong != null">
        asset_belong = #{assetBelong,jdbcType=VARCHAR},
      </if>
      <if test="assetDepreciation != null">
        asset_depreciation = #{assetDepreciation,jdbcType=REAL},
      </if>
      <if test="assetYear != null">
        asset_year = #{assetYear,jdbcType=INTEGER},
      </if>
      <if test="assetLocation != null">
        asset_location = #{assetLocation,jdbcType=VARCHAR},
      </if>
    </set>
    where asset_id = #{assetId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Asset">
    update asset
    set user_id = #{userId,jdbcType=VARCHAR},
      asset_number = #{assetNumber,jdbcType=INTEGER},
      asset_date = #{assetDate,jdbcType=DATE},
      asset_price = #{assetPrice,jdbcType=REAL},
      asset_belong = #{assetBelong,jdbcType=VARCHAR},
      asset_depreciation = #{assetDepreciation,jdbcType=REAL},
      asset_year = #{assetYear,jdbcType=INTEGER},
      asset_location = #{assetLocation,jdbcType=VARCHAR}
    where asset_id = #{assetId,jdbcType=VARCHAR}
  </update>
</mapper>